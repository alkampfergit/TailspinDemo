#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.20921.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tailspin.Admin.App.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TailspinToys")]
	public partial class CatalogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductDescriptor(ProductDescriptor instance);
    partial void UpdateProductDescriptor(ProductDescriptor instance);
    partial void DeleteProductDescriptor(ProductDescriptor instance);
    partial void InsertDeliveryMethod(DeliveryMethod instance);
    partial void UpdateDeliveryMethod(DeliveryMethod instance);
    partial void DeleteDeliveryMethod(DeliveryMethod instance);
    partial void InsertInventoryStatus(InventoryStatus instance);
    partial void UpdateInventoryStatus(InventoryStatus instance);
    partial void DeleteInventoryStatus(InventoryStatus instance);
    partial void InsertProducts_Related(Products_Related instance);
    partial void UpdateProducts_Related(Products_Related instance);
    partial void DeleteProducts_Related(Products_Related instance);
    #endregion
		
		public CatalogDataContext() : 
				base(global::Tailspin.Admin.App.Properties.Settings.Default.TailspinToysConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductDescriptor> ProductDescriptors
		{
			get
			{
				return this.GetTable<ProductDescriptor>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryMethod> DeliveryMethods
		{
			get
			{
				return this.GetTable<DeliveryMethod>();
			}
		}
		
		public System.Data.Linq.Table<InventoryStatus> InventoryStatus
		{
			get
			{
				return this.GetTable<InventoryStatus>();
			}
		}
		
		public System.Data.Linq.Table<Products_Related> Products_Relateds
		{
			get
			{
				return this.GetTable<Products_Related>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SKU;
		
		private int _DeliveryMethodID;
		
		private string _ProductName;
		
		private decimal _BasePrice;
		
		private decimal _WeightInPounds;
		
		private System.DateTime _DateAvailable;
		
		private int _InventoryStatusID;
		
		private string _EstimatedDelivery;
		
		private bool _AllowBackOrder;
		
		private bool _IsTaxable;
		
		private string _DefaultImageFile;
		
		private System.Data.Linq.Binary _Version;
		
		private int _AmountOnHand;
		
		private bool _AllowPreOrder;
		
		private EntitySet<ProductDescriptor> _ProductDescriptors;
		
		private EntitySet<Products_Related> _Products_Relateds;
		
		private EntitySet<Products_Related> _Products_Relateds1;
		
		private EntityRef<DeliveryMethod> _DeliveryMethod;
		
		private EntityRef<InventoryStatus> _InventoryStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnDeliveryMethodIDChanging(int value);
    partial void OnDeliveryMethodIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnBasePriceChanging(decimal value);
    partial void OnBasePriceChanged();
    partial void OnWeightInPoundsChanging(decimal value);
    partial void OnWeightInPoundsChanged();
    partial void OnDateAvailableChanging(System.DateTime value);
    partial void OnDateAvailableChanged();
    partial void OnInventoryStatusIDChanging(int value);
    partial void OnInventoryStatusIDChanged();
    partial void OnEstimatedDeliveryChanging(string value);
    partial void OnEstimatedDeliveryChanged();
    partial void OnAllowBackOrderChanging(bool value);
    partial void OnAllowBackOrderChanged();
    partial void OnIsTaxableChanging(bool value);
    partial void OnIsTaxableChanged();
    partial void OnDefaultImageFileChanging(string value);
    partial void OnDefaultImageFileChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnAmountOnHandChanging(int value);
    partial void OnAmountOnHandChanged();
    partial void OnAllowPreOrderChanging(bool value);
    partial void OnAllowPreOrderChanged();
    #endregion
		
		public Product()
		{
			this._ProductDescriptors = new EntitySet<ProductDescriptor>(new Action<ProductDescriptor>(this.attach_ProductDescriptors), new Action<ProductDescriptor>(this.detach_ProductDescriptors));
			this._Products_Relateds = new EntitySet<Products_Related>(new Action<Products_Related>(this.attach_Products_Relateds), new Action<Products_Related>(this.detach_Products_Relateds));
			this._Products_Relateds1 = new EntitySet<Products_Related>(new Action<Products_Related>(this.attach_Products_Relateds1), new Action<Products_Related>(this.detach_Products_Relateds1));
			this._DeliveryMethod = default(EntityRef<DeliveryMethod>);
			this._InventoryStatus = default(EntityRef<InventoryStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryMethodID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DeliveryMethodID
		{
			get
			{
				return this._DeliveryMethodID;
			}
			set
			{
				if ((this._DeliveryMethodID != value))
				{
					if (this._DeliveryMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryMethodIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMethodID = value;
					this.SendPropertyChanged("DeliveryMethodID");
					this.OnDeliveryMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal BasePrice
		{
			get
			{
				return this._BasePrice;
			}
			set
			{
				if ((this._BasePrice != value))
				{
					this.OnBasePriceChanging(value);
					this.SendPropertyChanging();
					this._BasePrice = value;
					this.SendPropertyChanged("BasePrice");
					this.OnBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightInPounds", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal WeightInPounds
		{
			get
			{
				return this._WeightInPounds;
			}
			set
			{
				if ((this._WeightInPounds != value))
				{
					this.OnWeightInPoundsChanging(value);
					this.SendPropertyChanging();
					this._WeightInPounds = value;
					this.SendPropertyChanged("WeightInPounds");
					this.OnWeightInPoundsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAvailable", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateAvailable
		{
			get
			{
				return this._DateAvailable;
			}
			set
			{
				if ((this._DateAvailable != value))
				{
					this.OnDateAvailableChanging(value);
					this.SendPropertyChanging();
					this._DateAvailable = value;
					this.SendPropertyChanged("DateAvailable");
					this.OnDateAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatusID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InventoryStatusID
		{
			get
			{
				return this._InventoryStatusID;
			}
			set
			{
				if ((this._InventoryStatusID != value))
				{
					if (this._InventoryStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryStatusIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatusID = value;
					this.SendPropertyChanged("InventoryStatusID");
					this.OnInventoryStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedDelivery", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EstimatedDelivery
		{
			get
			{
				return this._EstimatedDelivery;
			}
			set
			{
				if ((this._EstimatedDelivery != value))
				{
					this.OnEstimatedDeliveryChanging(value);
					this.SendPropertyChanging();
					this._EstimatedDelivery = value;
					this.SendPropertyChanged("EstimatedDelivery");
					this.OnEstimatedDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBackOrder", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowBackOrder
		{
			get
			{
				return this._AllowBackOrder;
			}
			set
			{
				if ((this._AllowBackOrder != value))
				{
					this.OnAllowBackOrderChanging(value);
					this.SendPropertyChanging();
					this._AllowBackOrder = value;
					this.SendPropertyChanged("AllowBackOrder");
					this.OnAllowBackOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxable", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsTaxable
		{
			get
			{
				return this._IsTaxable;
			}
			set
			{
				if ((this._IsTaxable != value))
				{
					this.OnIsTaxableChanging(value);
					this.SendPropertyChanging();
					this._IsTaxable = value;
					this.SendPropertyChanged("IsTaxable");
					this.OnIsTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultImageFile", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DefaultImageFile
		{
			get
			{
				return this._DefaultImageFile;
			}
			set
			{
				if ((this._DefaultImageFile != value))
				{
					this.OnDefaultImageFileChanging(value);
					this.SendPropertyChanging();
					this._DefaultImageFile = value;
					this.SendPropertyChanged("DefaultImageFile");
					this.OnDefaultImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountOnHand", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AmountOnHand
		{
			get
			{
				return this._AmountOnHand;
			}
			set
			{
				if ((this._AmountOnHand != value))
				{
					this.OnAmountOnHandChanging(value);
					this.SendPropertyChanging();
					this._AmountOnHand = value;
					this.SendPropertyChanged("AmountOnHand");
					this.OnAmountOnHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPreOrder", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowPreOrder
		{
			get
			{
				return this._AllowPreOrder;
			}
			set
			{
				if ((this._AllowPreOrder != value))
				{
					this.OnAllowPreOrderChanging(value);
					this.SendPropertyChanging();
					this._AllowPreOrder = value;
					this.SendPropertyChanged("AllowPreOrder");
					this.OnAllowPreOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDescriptor", Storage="_ProductDescriptors", ThisKey="SKU", OtherKey="SKU")]
		public EntitySet<ProductDescriptor> ProductDescriptors
		{
			get
			{
				return this._ProductDescriptors;
			}
			set
			{
				this._ProductDescriptors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Related", Storage="_Products_Relateds", ThisKey="SKU", OtherKey="SKU")]
		public EntitySet<Products_Related> Products_Relateds
		{
			get
			{
				return this._Products_Relateds;
			}
			set
			{
				this._Products_Relateds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Related1", Storage="_Products_Relateds1", ThisKey="SKU", OtherKey="RelatedSKU")]
		public EntitySet<Products_Related> Products_Relateds1
		{
			get
			{
				return this._Products_Relateds1;
			}
			set
			{
				this._Products_Relateds1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryMethod_Product", Storage="_DeliveryMethod", ThisKey="DeliveryMethodID", OtherKey="DeliveryMethodID", IsForeignKey=true)]
		public DeliveryMethod DeliveryMethod
		{
			get
			{
				return this._DeliveryMethod.Entity;
			}
			set
			{
				DeliveryMethod previousValue = this._DeliveryMethod.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryMethod.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._DeliveryMethod.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._DeliveryMethodID = value.DeliveryMethodID;
					}
					else
					{
						this._DeliveryMethodID = default(int);
					}
					this.SendPropertyChanged("DeliveryMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryStatus_Product", Storage="_InventoryStatus", ThisKey="InventoryStatusID", OtherKey="InventoryStatusID", IsForeignKey=true)]
		public InventoryStatus InventoryStatus
		{
			get
			{
				return this._InventoryStatus.Entity;
			}
			set
			{
				InventoryStatus previousValue = this._InventoryStatus.Entity;
				if (((previousValue != value) 
							|| (this._InventoryStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventoryStatus.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._InventoryStatus.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._InventoryStatusID = value.InventoryStatusID;
					}
					else
					{
						this._InventoryStatusID = default(int);
					}
					this.SendPropertyChanged("InventoryStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductDescriptors(ProductDescriptor entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductDescriptors(ProductDescriptor entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_Relateds(Products_Related entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_Relateds(Products_Related entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_Relateds1(Products_Related entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = this;
		}
		
		private void detach_Products_Relateds1(Products_Related entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductDescriptors")]
	public partial class ProductDescriptor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DescriptorID;
		
		private string _SKU;
		
		private string _LanguageCode;
		
		private string _Title;
		
		private bool _IsDefault;
		
		private string _Body;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDescriptorIDChanging(int value);
    partial void OnDescriptorIDChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    #endregion
		
		public ProductDescriptor()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DescriptorID
		{
			get
			{
				return this._DescriptorID;
			}
			set
			{
				if ((this._DescriptorID != value))
				{
					this.OnDescriptorIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptorID = value;
					this.SendPropertyChanged("DescriptorID");
					this.OnDescriptorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(2500) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDescriptor", Storage="_Product", ThisKey="SKU", OtherKey="SKU", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductDescriptors.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductDescriptors.Add(this);
						this._SKU = value.SKU;
					}
					else
					{
						this._SKU = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryMethod")]
	public partial class DeliveryMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryMethodID;
		
		private string _Description;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryMethodIDChanging(int value);
    partial void OnDeliveryMethodIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DeliveryMethod()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryMethodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeliveryMethodID
		{
			get
			{
				return this._DeliveryMethodID;
			}
			set
			{
				if ((this._DeliveryMethodID != value))
				{
					this.OnDeliveryMethodIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMethodID = value;
					this.SendPropertyChanged("DeliveryMethodID");
					this.OnDeliveryMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryMethod_Product", Storage="_Products", ThisKey="DeliveryMethodID", OtherKey="DeliveryMethodID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryMethod = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryStatus")]
	public partial class InventoryStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InventoryStatusID;
		
		private string _Description;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryStatusIDChanging(int value);
    partial void OnInventoryStatusIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public InventoryStatus()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InventoryStatusID
		{
			get
			{
				return this._InventoryStatusID;
			}
			set
			{
				if ((this._InventoryStatusID != value))
				{
					this.OnInventoryStatusIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatusID = value;
					this.SendPropertyChanged("InventoryStatusID");
					this.OnInventoryStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryStatus_Product", Storage="_Products", ThisKey="InventoryStatusID", OtherKey="InventoryStatusID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.InventoryStatus = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.InventoryStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Related")]
	public partial class Products_Related : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SKU;
		
		private string _RelatedSKU;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product> _Product1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnRelatedSKUChanging(string value);
    partial void OnRelatedSKUChanged();
    #endregion
		
		public Products_Related()
		{
			this._Product = default(EntityRef<Product>);
			this._Product1 = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedSKU", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RelatedSKU
		{
			get
			{
				return this._RelatedSKU;
			}
			set
			{
				if ((this._RelatedSKU != value))
				{
					if (this._Product1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedSKUChanging(value);
					this.SendPropertyChanging();
					this._RelatedSKU = value;
					this.SendPropertyChanged("RelatedSKU");
					this.OnRelatedSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Related", Storage="_Product", ThisKey="SKU", OtherKey="SKU", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_Relateds.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_Relateds.Add(this);
						this._SKU = value.SKU;
					}
					else
					{
						this._SKU = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Related1", Storage="_Product1", ThisKey="RelatedSKU", OtherKey="SKU", IsForeignKey=true)]
		public Product Product1
		{
			get
			{
				return this._Product1.Entity;
			}
			set
			{
				Product previousValue = this._Product1.Entity;
				if (((previousValue != value) 
							|| (this._Product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product1.Entity = null;
						previousValue.Products_Relateds1.Remove(this);
					}
					this._Product1.Entity = value;
					if ((value != null))
					{
						value.Products_Relateds1.Add(this);
						this._RelatedSKU = value.SKU;
					}
					else
					{
						this._RelatedSKU = default(string);
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
