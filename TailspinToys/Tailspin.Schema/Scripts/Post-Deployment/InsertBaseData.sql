--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
 EXEC sp_MSforeachtable @command1="ALTER TABLE ? NOCHECK CONSTRAINT ALL"

MERGE INTO [Categories] AS Target
USING (VALUES


  ('model','Model Airplanes')
 ,('paper','Paper Airplanes')

) AS Source ([Code],[Title])
ON (Target.[Code] = Source.[Code])
WHEN MATCHED THEN
 UPDATE SET
 [Title] = Source.[Title]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Code],[Title])
 VALUES(Source.[Code],Source.[Title])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Categories]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Categories] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
MERGE INTO [Categories_Products] AS Target
USING (VALUES


  ('model','modfcf')
 ,('model','modnwt')
 ,('model','modtrr')
 ,('paper','papcce')
 ,('paper','papwts')
 ,('paper','papwwi')

) AS Source ([CategoryCode],[SKU])
ON (Target.[CategoryCode] = Source.[CategoryCode] AND Target.[SKU] = Source.[SKU])
WHEN NOT MATCHED BY TARGET THEN
 INSERT([CategoryCode],[SKU])
 VALUES(Source.[CategoryCode],Source.[SKU])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Categories_Products]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Categories_Products] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
SET IDENTITY_INSERT [DeliveryMethod] ON
 
MERGE INTO [DeliveryMethod] AS Target
USING (VALUES


  (1,'Shipped')
 ,(2,'Download')
 ,(3,'Email')

) AS Source ([DeliveryMethodID],[Description])
ON (Target.[DeliveryMethodID] = Source.[DeliveryMethodID])
WHEN MATCHED THEN
 UPDATE SET
 [Description] = Source.[Description]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([DeliveryMethodID],[Description])
 VALUES(Source.[DeliveryMethodID],Source.[Description])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [DeliveryMethod]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[DeliveryMethod] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET IDENTITY_INSERT [DeliveryMethod] OFF
GO
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
MERGE INTO [OrderStatus] AS Target
USING (VALUES


  (1,'New')
 ,(2,'Submitted')
 ,(3,'Verified')
 ,(4,'Charged')
 ,(5,'Packaging')
 ,(6,'Shipped')
 ,(7,'Returned')
 ,(8,'Cancelled')
 ,(9,'Refunded')
 ,(10,'Closed')
 ,(99,'Not Checked Out')

) AS Source ([OrderStatusID],[Description])
ON (Target.[OrderStatusID] = Source.[OrderStatusID])
WHEN MATCHED THEN
 UPDATE SET
 [Description] = Source.[Description]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([OrderStatusID],[Description])
 VALUES(Source.[OrderStatusID],Source.[Description])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [OrderStatus]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[OrderStatus] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
SET IDENTITY_INSERT [ProductDescriptors] ON
 
MERGE INTO [ProductDescriptors] AS Target
USING (VALUES

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  (1,'modnwt','en','Summary',0,'Our new Northwind Trader cargo plane is the perfect next addition to your flying fleet.')
 ,(2,'modnwt','en','From The Manufacturer',0,'The Northwind Trader model is ready to carry cargo around the globe. Or outfit it for passenger travel. The Northwind Trader is our largest model airplane. Complete with customization options for almost any configuration, the Northwind Trader is a perfect gift for seasoned modelers and expert pilots. Checkout the enormous wingspan.')
 ,(3,'modnwt','en','Technical Details',0,'<ul><li><b>Weight</b>: 6 lbs</li><li><b>Height</b>: 6"</li><li><b>Wingspan</b>: 30"</li><li><b>Special Feature</b>: Patented balanced power engines, cargo and passenger customization kits</li></ul>')
 ,(4,'modfcf','en','Summary',0,'Show off your stunt piloting abilities with the ultimate in tight acrobatic planes.')
 ,(5,'modfcf','en','From The Manufacturer',0,'Intentionally twitchy controls, including our tightest fly-by-wire configuration ever, make the Fourth Coffee Flyer the most exciting model in this catalog. Fly circles around your friends and improve your repair skills as you learn to fly this plane. For advanced pilots only.')
 ,(6,'modfcf','en','Technical Details',0,'<ul><li><b>Weight</b>: 2 lbs</li><li><b>Height</b>: 3"</li><li><b>Wingspan</b>: 9"</li><li><b>Special Feature</b>: Dual-twitch fly-by-wire control kit, instant spike stunt engine, minor crash repair kit</li></ul>')
 ,(7,'modtrr','en','Summary',0,'The Trey Research Rocket is our modern stunt model airplane.')
 ,(8,'modtrr','en','From The Manufacturer',0,'Fast, easy to control and full of plenty of surprises, the Trey Research Rocket is a good starter airplane. Build up your stunt portfolio with this exciting, but forgiving model airplane.')
 ,(9,'modtrr','en','Technical Details',0,'<ul><li><b>Weight</b>: 1.5 lbs</li><li><b>Height</b>: 2"</li><li><b>Wingspan</b>: 12"</li><li><b>Special Feature</b>: Trainer landing rig, "How to fly in style" stunt guide video</li></ul>')
 ,(10,'papwts','en','Summary',0,'You will not believe this is a paper airplane.')
 ,(11,'papwts','en','From The Manufacturer',0,'This old school airplane will out soar and outlast any other paper airplane you can buy. We have been improving this design for over 10 years, so you can trust it will perform when you throw it.')
 ,(12,'papwts','en','Technical Details',0,'<ul><li><b>Wingspan</b>: 10"</li><li><b>Special Feature</b>: Stunt folding options</li></ul>')
 ,(13,'papwwi','en','Summary',0,'Hang this paper airplane from the ceiling and dream of a life in the clouds.')
 ,(14,'papwwi','en','From The Manufacturer',0,'This is a highly detailed non-flying paper airplane designed for display.')
 ,(15,'papwwi','en','Technical Details',0,'<ul><li><b>Wingspan</b>: 14"</li></ul>')
 ,(16,'papcce','en','Summary',0,'This paper airplane is the perfect starter kit for any aspiring Tailspin Toys pilot (or mechanic).')
 ,(17,'papcce','en','Technical Details',0,'<ul><li><b>Wingspan</b>: 6"</li><li><b>Special Feature</b>: World of paper and model airplanes book</li></ul>')

) AS Source ([DescriptorID],[SKU],[LanguageCode],[Title],[IsDefault],[Body])
ON (Target.[DescriptorID] = Source.[DescriptorID])
WHEN MATCHED THEN
 UPDATE SET
 [SKU] = Source.[SKU], 
[LanguageCode] = Source.[LanguageCode], 
[Title] = Source.[Title], 
[IsDefault] = Source.[IsDefault], 
[Body] = Source.[Body]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([DescriptorID],[SKU],[LanguageCode],[Title],[IsDefault],[Body])
 VALUES(Source.[DescriptorID],Source.[SKU],Source.[LanguageCode],Source.[Title],Source.[IsDefault],Source.[Body])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [ProductDescriptors]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[ProductDescriptors] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET IDENTITY_INSERT [ProductDescriptors] OFF
GO
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
SET IDENTITY_INSERT [InventoryStatus] ON
 
MERGE INTO [InventoryStatus] AS Target
USING (VALUES


  (1,'In Stock')
 ,(2,'Back Order')
 ,(3,'Pre-order')
 ,(4,'Special Order')
 ,(5,'Discontinued')
 ,(6,'Currently Unavailable')

) AS Source ([InventoryStatusID],[Description])
ON (Target.[InventoryStatusID] = Source.[InventoryStatusID])
WHEN MATCHED THEN
 UPDATE SET
 [Description] = Source.[Description]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([InventoryStatusID],[Description])
 VALUES(Source.[InventoryStatusID],Source.[Description])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [InventoryStatus]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[InventoryStatus] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET IDENTITY_INSERT [InventoryStatus] OFF
GO
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
MERGE INTO [Products] AS Target
USING (VALUES


  ('modfcf',1,'Fourth Coffee Flyer','The Fourth Coffee Flyer is a model airplane for the highly caffeinated.',50,1.0000,'2010-02-01T00:00:00',2,'2-3 Weeks',1,1,'fcf',10,1)
 ,('modnwt',1,'Northwind Trader','Move cargo in style with the Northwind Trader.',50,1.0000,'2010-02-01T00:00:00',2,'2-3 Weeks',1,1,'nwt',10,1)
 ,('modtrr',1,'Trey Research Rocket','The best of our modern design with self-stabilizing controls',50,1.0000,'2010-02-01T00:00:00',2,'2-3 Weeks',1,1,'trr',10,1)
 ,('papcce',1,'Contoso Cloud Explorer','The perfect start plane',50,1.0000,'2010-02-01T00:00:00',2,'2-3 Weeks',1,1,'cce',10,1)
 ,('papwts',1,'Wingtip Toys Stunt Plane','Throw our namesake plane and it may never come back to earth',50,1.0000,'2010-02-01T00:00:00',2,'2-3 Weeks',1,1,'wts',10,1)
 ,('papwwi',1,'World Wide Importer','The ultimat luxury item, in paper',50,1.0000,'2010-02-01T00:00:00',2,'2-3 Weeks',1,1,'wwi',10,1)

) AS Source ([SKU],[DeliveryMethodID],[ProductName],[Blurb],[BasePrice],[WeightInPounds],[DateAvailable],[InventoryStatusID],[EstimatedDelivery],[AllowBackOrder],[IsTaxable],[DefaultImageFile],[AmountOnHand],[AllowPreOrder])
ON (Target.[SKU] = Source.[SKU])
WHEN MATCHED THEN
 UPDATE SET
 [DeliveryMethodID] = Source.[DeliveryMethodID], 
[ProductName] = Source.[ProductName], 
[Blurb] = Source.[Blurb], 
[BasePrice] = Source.[BasePrice], 
[WeightInPounds] = Source.[WeightInPounds], 
[DateAvailable] = Source.[DateAvailable], 
[InventoryStatusID] = Source.[InventoryStatusID], 
[EstimatedDelivery] = Source.[EstimatedDelivery], 
[AllowBackOrder] = Source.[AllowBackOrder], 
[IsTaxable] = Source.[IsTaxable], 
[DefaultImageFile] = Source.[DefaultImageFile], 
[AmountOnHand] = Source.[AmountOnHand], 
[AllowPreOrder] = Source.[AllowPreOrder]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([SKU],[DeliveryMethodID],[ProductName],[Blurb],[BasePrice],[WeightInPounds],[DateAvailable],[InventoryStatusID],[EstimatedDelivery],[AllowBackOrder],[IsTaxable],[DefaultImageFile],[AmountOnHand],[AllowPreOrder])
 VALUES(Source.[SKU],Source.[DeliveryMethodID],Source.[ProductName],Source.[Blurb],Source.[BasePrice],Source.[WeightInPounds],Source.[DateAvailable],Source.[InventoryStatusID],Source.[EstimatedDelivery],Source.[AllowBackOrder],Source.[IsTaxable],Source.[DefaultImageFile],Source.[AmountOnHand],Source.[AllowPreOrder])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Products]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Products] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
MERGE INTO [Products_Related] AS Target
USING (VALUES


  ('modtrr','modfcf')
 ,('papwts','modfcf')
 ,('papwwi','modnwt')
 ,('modfcf','modtrr')
 ,('papwts','modtrr')
 ,('papwwi','papcce')
 ,('modfcf','papwts')
 ,('modtrr','papwts')
 ,('modnwt','papwwi')
 ,('papcce','papwwi')

) AS Source ([SKU],[RelatedSKU])
ON (Target.[RelatedSKU] = Source.[RelatedSKU] AND Target.[SKU] = Source.[SKU])
WHEN NOT MATCHED BY TARGET THEN
 INSERT([SKU],[RelatedSKU])
 VALUES(Source.[SKU],Source.[RelatedSKU])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Products_Related]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Products_Related] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
MERGE INTO [ShippingMethods] AS Target
USING (VALUES


  (1,'FedEx','Overnight',3,12,'Next Morning By 9AM',1)
 ,(2,'FedEx','Next Day',2,10,'End of Next Business Day',1)
 ,(3,'USPS','Priority Mail',1,5,'2-3 Business Days',3)
 ,(4,'USPS','Ground',1,1,'3-5 Business Days',4)

) AS Source ([ShippingMethodID],[Carrier],[ServiceName],[RatePerPound],[BaseRate],[EstimatedDelivery],[DaysToDeliver])
ON (Target.[ShippingMethodID] = Source.[ShippingMethodID])
WHEN MATCHED THEN
 UPDATE SET
 [Carrier] = Source.[Carrier], 
[ServiceName] = Source.[ServiceName], 
[RatePerPound] = Source.[RatePerPound], 
[BaseRate] = Source.[BaseRate], 
[EstimatedDelivery] = Source.[EstimatedDelivery], 
[DaysToDeliver] = Source.[DaysToDeliver]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([ShippingMethodID],[Carrier],[ServiceName],[RatePerPound],[BaseRate],[EstimatedDelivery],[DaysToDeliver])
 VALUES(Source.[ShippingMethodID],Source.[Carrier],Source.[ServiceName],Source.[RatePerPound],Source.[BaseRate],Source.[EstimatedDelivery],Source.[DaysToDeliver])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [ShippingMethods]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[ShippingMethods] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET NOCOUNT OFF
GO
 
 
--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.9
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008 by Daniel Nolan (http://danere.com)
 
SET NOCOUNT ON
 
SET IDENTITY_INSERT [TaxRates] ON
 
MERGE INTO [TaxRates] AS Target
USING (VALUES


  (1,0.0825,'CA','US',NULL)
 ,(2,0.0645,'HI','US',NULL)

) AS Source ([TaxRateID],[Rate],[Region],[Country],[PostalCode])
ON (Target.[TaxRateID] = Source.[TaxRateID])
WHEN MATCHED THEN
 UPDATE SET
 [Rate] = Source.[Rate], 
[Region] = Source.[Region], 
[Country] = Source.[Country], 
[PostalCode] = Source.[PostalCode]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([TaxRateID],[Rate],[Region],[Country],[PostalCode])
 VALUES(Source.[TaxRateID],Source.[Rate],Source.[Region],Source.[Country],Source.[PostalCode])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;
 
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [TaxRates]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[TaxRates] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
 
SET IDENTITY_INSERT [TaxRates] OFF
GO
EXEC sp_MSforeachtable @command1="ALTER TABLE ? CHECK CONSTRAINT ALL"
GO
SET NOCOUNT OFF
GO
 
 
